% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/extract_best_model.R
\name{extract_best_model}
\alias{extract_best_model}
\title{Extract Best Model from OptimalModelSearch Results}
\usage{
extract_best_model(results, data, refit = TRUE)
}
\arguments{
\item{results}{A list returned by OptimalModelSearch function}

\item{data}{The original data frame used for model fitting}

\item{refit}{Logical indicating whether to refit the model on the full dataset (TRUE)
or return the model fitted on the training set (FALSE). Default is TRUE.}
}
\value{
A model object of the appropriate class:
  \itemize{
    \item For full.glm: A glm object
    \item For backward.stepwise or forward.stepwise: A glm object
    \item For gam: A gam object from the mgcv package
    \item For lasso or ridge: A cv.glmnet object from the glmnet package
  }
}
\description{
This function takes the results from OptimalModelSearch and returns the actual
best model object that can be used for further analysis, prediction, or examination.
}
\details{
The returned model can be used for prediction with \code{predict()}, examination
of coefficients, or any other analysis typically performed on the respective model class.

When \code{refit=TRUE} (the default), the function refits the model on the complete dataset
for improved prediction performance.
}
\examples{
\dontrun{
# Find the best model
library(mlbench)
data(Sonar)
dat <- Sonar
dat$Class <- ifelse(dat$Class=="R", 0, 1)

# Run OptimalModelSearch
result <- OptimalModelSearch(formula=Class~., data=dat,
                           criterion="AUC", suppress_warnings=TRUE)
                           
# Extract the best model
best_model <- extract_best_model(result, dat)

# Use the model for prediction
predictions <- predict(best_model, newdata=dat[1:5,], type="response")
print(predictions)

# Examine model coefficients (if applicable to the model type)
if(inherits(best_model, "glm") || inherits(best_model, "gam")) {
  print(summary(best_model))
}
}
}
