% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_descrip.R
\name{plot_descrip}
\alias{plot_descrip}
\title{Generate Descriptive Plots for Variables in a Data Frame}
\usage{
plot_descrip(data, type, ppv)
}
\arguments{
\item{data}{A data frame containing the variables to be plotted. The response
variable should be in the first column if `type = "pair"`.}

\item{type}{A character string specifying the type of plot. Must be one of
"ind" or "pair".}

\item{ppv}{An integer (1 or 2) specifying the number of plots per variable
when `type = "ind"`. This argument is ignored if `type = "pair"`.}
}
\value{
Invisible NULL. Plots are generated on the current graphics device.
}
\description{
This function creates various plots to visualize individual variables or pairwise
relationships between a response variable (assumed to be the first column)
and other explanatory variables in a data frame.
}
\examples{
\dontrun{
# --- Examples for plot_descrip ---

# Basic usage with iris dataset
data(iris)

# Individual plots (one per variable)
plot_descrip(iris, type = "ind", ppv = 1)

# Individual plots (two per numeric variable, one for categorical)
plot_descrip(iris, type = "ind", ppv = 2)

# Pairwise plots (assuming Sepal.Length is the response)
plot_descrip(iris, type = "pair")

# --- Pairwise plots with a factor response ---
data(mtcars)
# Make copies to modify
mtcars_mod <- mtcars
# Treat 'cyl' as a factor response
mtcars_mod$cyl <- as.factor(mtcars_mod$cyl)
# Plot relationships between 'cyl' and other variables
plot_descrip(mtcars_mod[, c("cyl", "mpg", "wt", "gear")], type = "pair")

# --- Handling character variables ---
# Create some character data
char_data <- data.frame(
  response = rnorm(50),
  category = sample(c("A", "B", "C"), 50, replace = TRUE),
  group = sample(c("X", "Y"), 50, replace = TRUE)
)
# Individual plots (should create barplots for character columns)
plot_descrip(char_data, type = "ind", ppv = 1)

# Pairwise plots with character predictor
plot_descrip(char_data, type = "pair")

# --- Edge case: Single column ---
plot_descrip(iris[, "Sepal.Length", drop = FALSE], type = "ind", ppv = 1)

# --- Handling too many categories in 'pair' type ---
# Create data with a categorical variable having many levels
iris_many_levels <- iris
# Convert Sepal.Width to character and create many unique values artificially
iris_many_levels$ManyCats <- as.character(round(iris_many_levels$Sepal.Width * 100))
# Check number of levels (should be > 15)
print(paste("Number of unique values for ManyCats:", length(unique(iris_many_levels$ManyCats))))
# Plot pairwise with Sepal.Length as response
# Should print a message for 'ManyCats' and skip its plot
plot_descrip(iris_many_levels[, c("Sepal.Length", "Petal.Length", "ManyCats")], type = "pair")
}
}
